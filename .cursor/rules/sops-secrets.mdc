---
description: SOPS Secrets Management
globs:
alwaysApply: true
---

# SOPS Secrets Management

This configuration uses SOPS (Secrets OPerationS) for secure secrets management.

## Key Principles

- **Encrypted at Rest**: All secrets are encrypted in the repository
- **Decrypted at Runtime**: Secrets are decrypted during system build/deployment
- **No Plaintext Secrets**: Never commit unencrypted secrets to version control

## Usage Patterns

- Reference secrets using `sops.secrets."filename".path` syntax
- Use `sops-nix` module for automatic decryption
- Store secrets in `/secrets/` directory
- Use proper key management and rotation

## Configuration Examples

```nix
# Reference a decrypted secret
sops.secrets."my-secret".path = "/etc/my-secret";

# Use in systemd services
systemd.services.my-service = {
  serviceConfig.EnvironmentFile = config.sops.secrets."my-secret".path;
};

# Use in home-manager
home-manager.users.dylan = {
  programs.git.extraConfig = {
    user.signingKey = config.sops.secrets."gpg-signing-key".path;
  };
};
```

## Best Practices

- **Descriptive Names**: Use clear, descriptive secret names
- **Documentation**: Document secret purposes in comments
- **Testing**: Test secret decryption in development environments
- **Rotation**: Rotate secrets regularly and update keys
- **Environment Separation**: Use different keys for different environments
- **Access Control**: Limit access to secret keys and encrypted files

## Security Considerations

- **Key Management**: Store encryption keys securely (not in the repo)
- **Access Logging**: Monitor access to secrets and key usage
- **Backup Strategy**: Ensure encrypted secrets are backed up
- **Recovery**: Have a plan for secret recovery if keys are lost
- **Audit Trail**: Track who has access to which secrets

## Troubleshooting

- **Decryption Issues**: Check key availability and permissions
- **Path Problems**: Ensure secret paths are correctly referenced
- **Permission Errors**: Verify file permissions for decrypted secrets
- **Key Rotation**: Update keys and re-encrypt secrets when rotating

Remember: Secrets management is critical for security. Always follow the principle of least privilege and maintain proper key hygiene.